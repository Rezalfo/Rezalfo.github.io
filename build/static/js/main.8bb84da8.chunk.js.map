{"version":3,"sources":["Home.js","ChosenQuestions.js","FichePoste.js","Game.js","Credit.js","Postes.js","Nav.js","Play.js","EndOfGame.js","CV/ORION_Ludovic_CV.pdf","CV/OUHAMMOU_Cyphax_CV.pdf","CV/THEVENIAUT_Robin_CV.pdf","ShowPdf.js","Main.js","reportWebVitals.js","index.js"],"names":["Home","className","to","ChosenQuestions","result","historique","map","reponse","etape_id","id","FichePoste","fiche_poste","numposte","fiche","require","poste","poste_c","travail_1","travail_2","travail_3","poste_ch","intitule_poste","nom_entreprise","description","langages","langue","langues","formation","experience","bonus","Game","questions_data","useState","idQuestion","setIdQuestion","idShowAnswers","setShowAnswers","answered","setAnswered","reponses","data","setData","randomnb","Math","floor","random","setAnswers","question","etape","answers","push","questions","game","i","check","length","pathname","state","list_id","questions_reponses","list_question","liste","question_id","rep","onClick","isAnswered","type","for","Credit","Postes","min","max","postes_infos","poste_id","postes","poste_rand","poste_info","langage","competences","NavB","class","href","Play","EndOfGame","location","useLocation","idposte","resultat","setResultat","candidat","travail","toString","console","log","checkReponse","value","event","target","ShowPdf","pageNumber","pdfjs","GlobalWorkerOptions","workerSrc","version","Carousel","variant","fade","Item","file","file_1","file_2","file_3","Main","Nav","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bb84da8.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport './css/Home.css';\r\n\r\nfunction Home() {\r\n\r\n    return (\r\n        <div className=\"container_home\">\r\n            <h1>Chat Bot Interview</h1>\r\n            <div className=\"container_rules\">\r\n                <p>\r\n                    Bienvenue sur notre jeu <strong>Chat Bot Interview !</strong> <br /><br />\r\n                    <u>Voici les règles du jeu :</u><br /><br />\r\n                    Vous êtes un recruteur. Vous devez trouver le profil idéal parmis 3 profils disponibles pour une fiche de poste aléatoirement distribué au début du jeu.\r\n                    Le joueur reçoit une fiche de poste.<br />\r\n\r\n                    Vous devez lire cette fiche de poste et analyser les besoins du poste.<br />\r\n\r\n                    Vous avez 3 personnes devant vous. Vous ne connaissez pas le profil de ces 3 candidats.<br />\r\n\r\n                    Votre objectif sera de poser des questions aux trois candidats pour découvrir leur profil.<br />\r\n                    Les questions vous seront données au début de la partie.\r\n\r\n                    Une fiche de poste correspond a un profil.<br />\r\n\r\n                    Votre but sera de trouver le profil idéal pour la fiche de poste donné en utilisant le moins de question possible.<br />\r\n                </p>\r\n            </div>\r\n            <Link className=\"btn_jouer\" to=\"Play\">Jouer</Link>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Home;","function ChosenQuestions({ historique }) {\r\n\r\n    let result;\r\n    if (historique) {\r\n        result = historique.map((reponse) => {\r\n            return (\r\n                <ul>\r\n                    <li>Etape {reponse.etape_id} :</li>\r\n                    <li>{reponse.id}. {reponse.reponse}</li>\r\n                </ul>\r\n            )\r\n\r\n        });\r\n    }\r\n    else {\r\n        result = <p className='QuestSelected'>Aucune proposition choisie</p>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Vos questions sélectionnées</h1>\r\n            <article>\r\n                {result}\r\n            </article>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ChosenQuestions;","\r\n\r\nfunction FichePoste({ numposte }) {\r\n    const fiche = require(\"./requests/fiche_poste.json\");\r\n    let fiche_poste;\r\n    if (numposte) {\r\n        fiche_poste = fiche.map((poste) => {\r\n            let poste_c;\r\n            if (numposte === 1) {\r\n                poste_c = poste.travail_1;\r\n            }\r\n            else if (numposte === 2) {\r\n                poste_c = poste.travail_2;\r\n            }\r\n            else if (numposte === 3) {\r\n                poste_c = poste.travail_3;\r\n            }\r\n            if (poste_c) {\r\n                return poste_c.map((poste_ch) => {\r\n                    return (\r\n                        <section className=\"travail\">\r\n                            <h2>{poste_ch.intitule_poste}</h2>\r\n                            <p>{poste_ch.nom_entreprise}</p>\r\n\r\n                            <p>Description du poste : {poste_ch.description}</p>\r\n                            <ul><p>Compétences requises :</p>\r\n                                <li>Languages de programmation attendus : <ul> {poste_ch.langages.map((langue) => {\r\n                                    return (<li>{langue}</li>)\r\n\r\n                                })}</ul></li>\r\n                                <li>Langues maitrisées : {poste_ch.langues}</li>\r\n                                <li>Formation requise : {poste_ch.formation}</li>\r\n                                <li>Année d'expériences attendues : {poste_ch.experience}</li>\r\n                                <li>Le petit plus : {poste_ch.bonus}</li>\r\n                            </ul>\r\n                        </section>\r\n\r\n                    )\r\n                })\r\n\r\n            }\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            {fiche_poste}\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default FichePoste;","import { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ChosenQuestions from './ChosenQuestions';\r\nimport './css/Game.css';\r\nimport FichePoste from './FichePoste';\r\n\r\nfunction Game() {\r\n    const questions_data = require(\"./requests/questions.json\");\r\n    const [idQuestion, setIdQuestion] = useState(1);\r\n    const [idShowAnswers, setShowAnswers] = useState(0);\r\n    const [answered, setAnswered] = useState(false);\r\n    const [reponses, setReponses] = useState([]);\r\n    const [data, setData] = useState('');\r\n\r\n    const randomnb = Math.floor(Math.random() * (4 - 1) + 1);\r\n\r\n    function setAnswers(id, question, etape, answers) {\r\n        if (idShowAnswers !== 0) {\r\n\r\n            setAnswered(true)\r\n        }\r\n        else {\r\n            setShowAnswers(id, question, etape, answers)\r\n            reponses.push({ \"etape_id\": etape, \"id\": id, \"reponse\": question, \"answers\": answers })\r\n            setData(reponses)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function nextStep(list_id) {\r\n        setIdQuestion(list_id + 1)\r\n        setAnswered(false)\r\n        setShowAnswers(0)\r\n    }\r\n\r\n\r\n    const questions = questions_data.game.map((question, i, check) => {\r\n        if (idQuestion - 1 === check.length) {\r\n\r\n            return <Redirect to={{ pathname: \"/EndOfGame\", state: { reponses: reponses, poste: randomnb } }} />\r\n\r\n        }\r\n\r\n        let questions_reponses, rep, isAnswered;\r\n        if (idQuestion === question.list_id) {\r\n\r\n            questions_reponses = question.list_question.map((liste) => {\r\n\r\n                if (idShowAnswers === liste.question_id) {\r\n                    rep = liste.reponses.map((reponse) => {\r\n                        return <li className='Response'><p>{reponse}</p></li>\r\n                    })\r\n\r\n\r\n                    return (\r\n                        <div className='Question' >\r\n                            <p><button className='checked' id={liste.question_id} onClick={() => setAnswers(liste.question_id, liste.question, question.list_id, liste.reponses)}>{liste.question}</button></p>\r\n                        </div>\r\n\r\n                    )\r\n\r\n                }\r\n                else {\r\n                    return (\r\n                        <div className='Question' >\r\n                            <p><button id={liste.question_id} onClick={() => setAnswers(liste.question_id, liste.question, question.list_id, liste.reponses)}>{liste.question}</button></p>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n\r\n            })\r\n\r\n            if (answered) {\r\n                isAnswered = <p className='QuestSelected'>Vous avez déjà selectionné une question !</p>\r\n            }\r\n\r\n            return (\r\n                <div className='main'>\r\n                    <h1>Etape {question.list_id} / 7</h1>\r\n\r\n                    <div className='main_QR'>\r\n                        <div className='main_question'>\r\n                            {questions_reponses}\r\n                        </div>\r\n\r\n                        <div className='main_reponse'>\r\n                            <ul className='ResponseUl'>\r\n                                {rep}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <article>{isAnswered}</article>\r\n\r\n                    <button className='NextStep' onClick={() => nextStep(question.list_id)}>Etape suivante</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    )\r\n    return (\r\n        <div>\r\n            <div id=\"lateral-panel\">\r\n                <input id=\"lateral-panel-input\" type=\"checkbox\" />\r\n\r\n                <label id=\"lateral-panel-label\" for=\"lateral-panel-input\">Fiche de poste</label>\r\n                <div id=\"lateral-panel-bloc\">\r\n                    <FichePoste numposte={randomnb} />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {questions}\r\n\r\n            <ChosenQuestions historique={data} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Game;","function Credit() {\r\n\r\n    return(\r\n        <div>\r\n            <h1>Credits</h1>\r\n            <h1>Créateurs</h1>\r\n            <ul>\r\n                <li>Ludovic</li>\r\n                <li>Cyphax</li>\r\n                <li>Robin</li>\r\n            </ul>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Credit;","\r\nfunction Postes() {\r\n\r\n    const postes_infos = require(\"./requests/fiche_poste.json\");\r\n\r\n    function getRandomArbitrary(min, max) {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    const poste_id = getRandomArbitrary(1, 4);\r\n\r\n    const postes = postes_infos.map((poste) => {\r\n        let poste_rand = poste_id === 1 ? poste.travail_1 : poste_id === 2 ? poste.travail_2 : poste_id === 3 ? poste.travail_3 : \"\";\r\n        if (poste_rand !== \"\") {\r\n            return poste_rand.map((poste_info) => {\r\n\r\n                const langages = poste_info.langages.map((langage) => {\r\n                    return (<li>{langage} </li>)\r\n                })\r\n                return (\r\n                    <section>\r\n                        <h1>{poste_info.intitule_poste}</h1>\r\n                        <article id=\"competences\">\r\n                            <h1>Compétences</h1>\r\n                            <p>Langages</p>\r\n                            <ul>{langages}</ul>\r\n                            <p>Compétences : {poste_info.competences}</p>\r\n                            <p>Formation :{poste_info.formation}</p>\r\n                            <p>Experience :{poste_info.experience}</p>\r\n                            <p>Langues : {poste_info.langues}</p>\r\n                        </article>\r\n                        <p>{poste_info.description}</p>\r\n\r\n                    </section>)\r\n            })\r\n        }\r\n        else {\r\n            return <article>\r\n                <p>Error loading poste</p>\r\n            </article>\r\n        }\r\n\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            {postes}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Postes;","import 'bootstrap/dist/css/bootstrap.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction NavB() {\r\n\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div class=\"container-fluid\">\r\n                <Link className='nav-link text-white' to=\"/Home\" >Chat bot interview</Link>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item\">\r\n                            <Link className='nav-link text-white' to=\"/Play\" >Jouer</Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <Link className='nav-link text-white' to=\"/ShowPdf\">Consulter les CVs</Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"/\">A propos</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default NavB;","import './css/play.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Play() {\r\n    return (\r\n        <div className='Animation'>\r\n\r\n            <article className=\"btn_list\" >\r\n                <Link className='btn_play hard' to=\"/Game\">Commencer à jouer</Link>\r\n            </article>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Play;","import { useState } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport './css/EndOfGame.css';\r\n\r\nfunction EndOfGame() {\r\n    const location = useLocation();\r\n    const fiche = require(\"./requests/fiche_poste.json\");\r\n    const idposte = location.state.poste;\r\n    const [resultat, setResultat] = useState(\"\");\r\n    let candidat = \"\";\r\n\r\n    candidat += fiche.map((poste) => {\r\n        let poste_c;\r\n        if (idposte === 1) {\r\n            poste_c = poste.travail_1;\r\n        }\r\n        else if (idposte === 2) {\r\n            poste_c = poste.travail_2;\r\n        }\r\n        else if (idposte === 3) {\r\n            poste_c = poste.travail_3;\r\n        }\r\n        return poste_c.map((travail) => {\r\n            return travail.candidat.toString();\r\n        })\r\n\r\n    })\r\n    console.log(candidat)\r\n    const reponses = location.state.reponses.map((reponse) => {\r\n        return (\r\n            <ul className='question_l'>\r\n                <li className='title_question'>Question {reponse.etape_id}</li>\r\n                <li>{reponse.reponse}</li>\r\n                <li><ul> {reponse.answers.map((reponse) => {\r\n                    return (\r\n                        <li>{reponse}</li>\r\n                    )\r\n                })} </ul></li>\r\n                <hr></hr>\r\n            </ul>\r\n\r\n        )\r\n\r\n    });\r\n    const checkReponse = function (reponse) {\r\n        if (reponse === candidat) {\r\n            setResultat(<h1>Felicitations {candidat} etait le bon choix !</h1>);\r\n        }\r\n        else {\r\n            setResultat(<h1>Ce n'etait malheureusement pas le bon candidat</h1>);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>La partie est finie !</h1>\r\n            <article>\r\n                <h1>A qui correspond le mieux ce poste ?</h1>\r\n                <section id='choix_poste'>\r\n                    <article>\r\n                        <button className='btn_response' value=\"Ludovic\" onClick={(event) => checkReponse(event.target.value)}>ludovic</button>\r\n                        <button className='btn_response' onClick={(event) => checkReponse(event.target.value)}>Cyphax</button>\r\n                        <button className='btn_response' onClick={(event) => checkReponse(event.target.value)}>Robin</button>\r\n                    </article>\r\n                    <div>\r\n                        {resultat}\r\n                    </div>\r\n                </section>\r\n\r\n            </article>\r\n            <article>\r\n                <h1 className='vos_reponses'>Vos résultats</h1>\r\n                {reponses}\r\n            </article>\r\n            <article className=\"replay\">\r\n                <Link className=\"btn_replay\" to=\"/Play\">Rejouer ?</Link>\r\n            </article>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EndOfGame;","export default __webpack_public_path__ + \"static/media/ORION_Ludovic_CV.1a6dcbf4.pdf\";","export default __webpack_public_path__ + \"static/media/OUHAMMOU_Cyphax_CV.e84f31be.pdf\";","export default __webpack_public_path__ + \"static/media/THEVENIAUT_Robin_CV.b4dbdf16.pdf\";","import { useState } from 'react';\r\nimport { Document, Page, pdfjs } from 'react-pdf'\r\nimport file_1 from './CV/ORION_Ludovic_CV.pdf'\r\nimport file_2 from './CV/OUHAMMOU_Cyphax_CV.pdf'\r\nimport file_3 from './CV/THEVENIAUT_Robin_CV.pdf'\r\nimport { Carousel } from 'react-bootstrap';\r\nimport './css/pdf.css';\r\n\r\n\r\nfunction ShowPdf() {\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n    return (\r\n        <Carousel variant=\"dark\" fade={false}>\r\n            <Carousel.Item>\r\n                <div className=\"pdf_div\">\r\n                    <Document\r\n                        file={file_1}\r\n                    ><Page pageNumber={pageNumber} /></Document>\r\n                </div>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n                <div className=\"pdf_div\">\r\n                    <Document\r\n                        file={file_2}\r\n                    ><Page pageNumber={pageNumber} /></Document>\r\n                </div>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n                <div className=\"pdf_div\">\r\n                    <Document\r\n                        file={file_3}\r\n                    ><Page pageNumber={pageNumber} /></Document>\r\n                </div>\r\n            </Carousel.Item>\r\n        </Carousel>\r\n\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ShowPdf;\r\n\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n\r\n} from \"react-router-dom\";\r\n\r\n\r\nimport Home from './Home';\r\nimport Game from './Game';\r\nimport Credit from './Credit';\r\nimport Postes from './Postes';\r\nimport NavB from './Nav';\r\nimport Play from './Play';\r\nimport EndOfGame from './EndOfGame';\r\nimport ShowPdf from './ShowPdf';\r\n\r\nfunction Main() {\r\n  return (\r\n    <Router>\r\n      <NavB />\r\n      <Switch>\r\n\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n\r\n        <Route exact path=\"/Home\">\r\n          <Home />\r\n        </Route>\r\n\r\n        <Route exact path=\"/Play\">\r\n          <Play />\r\n        </Route>\r\n\r\n        <Route exact path=\"/Game\">\r\n          <Game />\r\n        </Route>\r\n\r\n        <Route exact path=\"/EndOfGame\">\r\n          <EndOfGame />\r\n        </Route>\r\n\r\n        <Route exact path=\"/ShowPdf\">\r\n          <ShowPdf />\r\n        </Route>\r\n\r\n        <Route exact path=\"/Credit\">\r\n          <Credit />\r\n        </Route>\r\n\r\n        <Route exact path=\"/Postes\">\r\n          <Postes />\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Main from './Main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}